name: 'build and test'
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: us-west-2
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v3
      name: Install pnpm
      id: pnpm-install
      with:
        version: latest
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile, --strict-peer-dependencies]
          - args: [--global, aws-cdk]
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        check-latest: true

    - name: Create for testing parameter
      working-directory: __tests__/cdk
      run: cdk deploy --all

  build:
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [us-west-2, ap-northeast-1]

    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ matrix.region }}
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v3
      name: Install pnpm
      id: pnpm-install
      with:
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile, --strict-peer-dependencies]
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        check-latest: true
    - name: Build and test
      run: pnpm all

