name: E2E Test

on:
  push:
    branches: [ main ]
  pull_request:

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    runs-on: ubuntu-24.04-arm

    steps:
    - uses: actions/checkout@v5

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        check-latest: true

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile, --strict-peer-dependencies]
          - args: [--global, aws-cdk]

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: us-west-2
    - name: Create for testing table
      working-directory: __tests__/cdk
      run: cdk deploy --all

  test:
    needs: [setup]
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        region: [us-west-2, ap-northeast-1]

    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ matrix.region }}
    - uses: actions/checkout@v5

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        check-latest: true

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile, --strict-peer-dependencies]

    - name: Run E2E test
      id: test
      uses: ./
      with:
        parameter-name: /get-aws-ssm-parameter/test
        aws-region: ${{ matrix.region }}
        decryption: false

    - name: verify value
      run: if [ ${{ steps.test.outputs.value }} != 'test' ]; then exit 1; fi

    - name: Prepare E2E test with decryption
      id: prepare-test-with-decryption
      run: aws ssm put-parameter --name '/get-aws-ssm-parameter/test-with-decryption' --value 'test-with-decryption' --type String --overwrite --region ${{ matrix.region }}

    - name: Run E2E test with decryption
      id: test-with-decryption
      uses: ./
      with:
        parameter-name: /get-aws-ssm-parameter/test-with-decryption
        aws-region: ${{ matrix.region }}
        decryption: true

    - name: verify value with decryption
      run: if [ ${{ steps.test-with-decryption.outputs.value }} != 'test-with-decryption' ]; then exit 1; fi
