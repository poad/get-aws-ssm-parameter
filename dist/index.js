import './sourcemap-register.cjs';/******/ /* webpack/runtime/compat */
/******/ 
/******/ if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/) ? 1 : 0, -1) + "/";
/******/ 
/************************************************************************/
var __webpack_exports__ = {};
Object.defineProperty(exports,"__esModule",{value:true});const _core=/*#__PURE__*/_interop_require_wildcard(require("@actions/core"));require("source-map-support/register");const _client=/*#__PURE__*/_interop_require_default(require("./client"));function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interop_require_wildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={__proto__:null};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}function run(){try{const parameterName=_core.getInput("parameter-name",JSON.parse('{"required":true,"trimWhitespace":true}'));_core.debug(`Parameter name is ${parameterName}.`);const region=_core.getInput("aws-region");_core.debug(region?`region is ${region} `:"Use the credential's region");const decryption=_core.getBooleanInput("decryption");_core.debug(`decryption is ${decryption} `);const client=(0,_client.default)(region);client.getParameterValue(parameterName,decryption).then(value=>_core.setOutput("value",value)).catch(error=>{if(error instanceof Error)_core.setFailed(error.message)})}catch(error){console.error(error);if(error instanceof Error)_core.setFailed(error.message)}}run();
//# sourceMappingURL=main.js.map

//# sourceMappingURL=index.js.map